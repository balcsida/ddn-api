##
## MySQL Database
##

    #
    # Set the below properties to configure DDN to connect to a MySQL
    # database. The user needs to have sufficient privileges to create
    # and update tables.
    #

    db-provider = "mysql"
    db-addr = "localhost"
    db-port = "3306"
    db-username = "root"
    db-userpass = "root"

    #
    # Specify the name of the database which DDN will use. On startup
    # the server will automatically update the tables to the latest 
    # version, so an empty database is more than enough at first run.
    #
    db-name = "ddn"

##
## SQLite3 Database
##


    #
    # Uncomment the below properties to configure DDN to use SQLite3 as
    # the database bacckend. The db-addr should either be a relative or
    # an absolute path to the database file (which does not have to exist
    # before starting the server)
    #
    #db-provider = "sqlite"
    #db-addr = "./ddn.db"

##
## Server
##
    #
    # Specify the hostname of the server. It is used primarily when
    # generating a link for agents to download the uploaded database
    # dumps, and as such, should be resolvable and reachable from
    # the agents.
    #
    server-host = "localhost"

    #
    # Specify the port of the server. It is the main entrypoint to the web
    # interface to handle web traffic, but is also used when generating links
    # for agents to download the uploaded database dumps.
    #
    # If behind a web server, traffic should be routed to this port.
    #
    server-port = "7010"

##
## Email settings
##

    #
    # Set the host and port of the smtp server that will be used to send emails to
    # users of the application.
    #
    # Leave blank if the application should not send emails.
    #
    smtp-host = ""
    smtp-port = 0

    #
    # Set the user which will be used to authenticate with the smtp server. Leave blank
    # if no authentication is required.
    #
    smtp-user = ""

    #
    # Set the password which will be used to authenticate the user with the smtp server.
    # Leave blank if no authentication is required.
    #
    smtp-password = ""

    #
    # Set the email address that is being set as the "From:" address of the email being
    # sent.
    #
    email-sender = ""

    #
    # Set a list of email addresses that will be used to send out the administrative emails.
    #
    admin-emails = ["webmaster@example.com"]

##
## Folder mounting
##

    #
    # Specify an absolute path that the application will "mount". This means that users will
    # be able to navigate the folders and see the files of the mounted location, but will not
    # be able to "escape" it, e.g. move to its parent directory.
    #
    # Used to allow users to select dumpfiles already on the file system without having to upload
    # them again.
    #
    mount-loc = ""

##
## Web Push Notifications
##

    #
    # Specify whether to enable Web Push Notification to end users. If enabled, vapid public- and
    # private keys will need to be generated and populated.
    #
    # Individual users will be able to subscribe to notifications and unsubscribe from them as they
    # see fit.
    #

    webpush-enabled = false

    #
    # The webpush-subscriber is the primary contact email for the subscription. This should be a valid
    # email address.
    #

    webpush-subscriber = "ddn@example.com"

    #
    # Specify the application server public and private keys (so-called VAPID keys) used for
    # communicating with the Web Push Notification service providers used by browsers.
    #
    # The public key is specified in res/js/push.js, and is used by the browser when subscribing
    # to receive push notifications. It is only included here as a reminder that it needs to
    # be updated at a different location.
    #
    vapid-public-key = "Ignored by backend, update it in res/js/push.js"

    #
    # The private key is used when the backend is sending a notification.
    #
    # You can create a public and private set of application server keys by visiting 
    # https://web-push-codelab.glitch.me/ or you can use the web-push tool to generate
    # the keys. See more at https://github.com/web-push-libs/web-push#command-line
    #
    # $ npm install -g web-push
    # $ web-push generate-vapid-keys
    #
    vapid-private-key = ""


    #
    # Specify the Google Analytics ID below. If set, GA tracking code will be added
    # to the top of the head.
    #
    google-analytics-id = ""
